/**
 * Shoppers OpenAPI
 * This is a Shoppers Catalogue server.  [Learn about Swagger](http://swagger.io) or join the IRC channel `#swagger` on irc.freenode.net.  For this sample, you can use the api key `special-key` to test the authorization filters 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.FrameworkCriteriaInterface;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Interface CriteriaInterface
 **/
@ApiModel(description = "Interface CriteriaInterface")
public class FrameworkCriteriaInterface {
  
  @SerializedName("mapper_interface_name")
  private String mapperInterfaceName = null;
  @SerializedName("criteria_list")
  private List<FrameworkCriteriaInterface> criteriaList = null;
  @SerializedName("filters")
  private List<String> filters = null;
  @SerializedName("orders")
  private List<String> orders = null;
  @SerializedName("limit")
  private List<String> limit = null;

  /**
   * Associated Mapper Interface name
   **/
  @ApiModelProperty(required = true, value = "Associated Mapper Interface name")
  public String getMapperInterfaceName() {
    return mapperInterfaceName;
  }
  public void setMapperInterfaceName(String mapperInterfaceName) {
    this.mapperInterfaceName = mapperInterfaceName;
  }

  /**
   * Criteria objects added to current Composite Criteria
   **/
  @ApiModelProperty(required = true, value = "Criteria objects added to current Composite Criteria")
  public List<FrameworkCriteriaInterface> getCriteriaList() {
    return criteriaList;
  }
  public void setCriteriaList(List<FrameworkCriteriaInterface> criteriaList) {
    this.criteriaList = criteriaList;
  }

  /**
   * List of filters
   **/
  @ApiModelProperty(required = true, value = "List of filters")
  public List<String> getFilters() {
    return filters;
  }
  public void setFilters(List<String> filters) {
    this.filters = filters;
  }

  /**
   * Ordering criteria
   **/
  @ApiModelProperty(required = true, value = "Ordering criteria")
  public List<String> getOrders() {
    return orders;
  }
  public void setOrders(List<String> orders) {
    this.orders = orders;
  }

  /**
   * Limit
   **/
  @ApiModelProperty(required = true, value = "Limit")
  public List<String> getLimit() {
    return limit;
  }
  public void setLimit(List<String> limit) {
    this.limit = limit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FrameworkCriteriaInterface frameworkCriteriaInterface = (FrameworkCriteriaInterface) o;
    return (this.mapperInterfaceName == null ? frameworkCriteriaInterface.mapperInterfaceName == null : this.mapperInterfaceName.equals(frameworkCriteriaInterface.mapperInterfaceName)) &&
        (this.criteriaList == null ? frameworkCriteriaInterface.criteriaList == null : this.criteriaList.equals(frameworkCriteriaInterface.criteriaList)) &&
        (this.filters == null ? frameworkCriteriaInterface.filters == null : this.filters.equals(frameworkCriteriaInterface.filters)) &&
        (this.orders == null ? frameworkCriteriaInterface.orders == null : this.orders.equals(frameworkCriteriaInterface.orders)) &&
        (this.limit == null ? frameworkCriteriaInterface.limit == null : this.limit.equals(frameworkCriteriaInterface.limit));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.mapperInterfaceName == null ? 0: this.mapperInterfaceName.hashCode());
    result = 31 * result + (this.criteriaList == null ? 0: this.criteriaList.hashCode());
    result = 31 * result + (this.filters == null ? 0: this.filters.hashCode());
    result = 31 * result + (this.orders == null ? 0: this.orders.hashCode());
    result = 31 * result + (this.limit == null ? 0: this.limit.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FrameworkCriteriaInterface {\n");
    
    sb.append("  mapperInterfaceName: ").append(mapperInterfaceName).append("\n");
    sb.append("  criteriaList: ").append(criteriaList).append("\n");
    sb.append("  filters: ").append(filters).append("\n");
    sb.append("  orders: ").append(orders).append("\n");
    sb.append("  limit: ").append(limit).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
