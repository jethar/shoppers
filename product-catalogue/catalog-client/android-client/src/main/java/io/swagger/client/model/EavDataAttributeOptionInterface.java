/**
 * Shoppers OpenAPI
 * This is a Shoppers Catalogue server.  [Learn about Swagger](http://swagger.io) or join the IRC channel `#swagger` on irc.freenode.net.  For this sample, you can use the api key `special-key` to test the authorization filters 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.EavDataAttributeOptionLabelInterface;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Created from:
 **/
@ApiModel(description = "Created from:")
public class EavDataAttributeOptionInterface {
  
  @SerializedName("label")
  private String label = null;
  @SerializedName("value")
  private String value = null;
  @SerializedName("sort_order")
  private Integer sortOrder = null;
  @SerializedName("is_default")
  private Boolean isDefault = null;
  @SerializedName("store_labels")
  private List<EavDataAttributeOptionLabelInterface> storeLabels = null;

  /**
   * Option label
   **/
  @ApiModelProperty(required = true, value = "Option label")
  public String getLabel() {
    return label;
  }
  public void setLabel(String label) {
    this.label = label;
  }

  /**
   * Option value
   **/
  @ApiModelProperty(required = true, value = "Option value")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }

  /**
   * Option order
   **/
  @ApiModelProperty(value = "Option order")
  public Integer getSortOrder() {
    return sortOrder;
  }
  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  /**
   * Default
   **/
  @ApiModelProperty(value = "Default")
  public Boolean getIsDefault() {
    return isDefault;
  }
  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }

  /**
   * Option label for store scopes
   **/
  @ApiModelProperty(value = "Option label for store scopes")
  public List<EavDataAttributeOptionLabelInterface> getStoreLabels() {
    return storeLabels;
  }
  public void setStoreLabels(List<EavDataAttributeOptionLabelInterface> storeLabels) {
    this.storeLabels = storeLabels;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EavDataAttributeOptionInterface eavDataAttributeOptionInterface = (EavDataAttributeOptionInterface) o;
    return (this.label == null ? eavDataAttributeOptionInterface.label == null : this.label.equals(eavDataAttributeOptionInterface.label)) &&
        (this.value == null ? eavDataAttributeOptionInterface.value == null : this.value.equals(eavDataAttributeOptionInterface.value)) &&
        (this.sortOrder == null ? eavDataAttributeOptionInterface.sortOrder == null : this.sortOrder.equals(eavDataAttributeOptionInterface.sortOrder)) &&
        (this.isDefault == null ? eavDataAttributeOptionInterface.isDefault == null : this.isDefault.equals(eavDataAttributeOptionInterface.isDefault)) &&
        (this.storeLabels == null ? eavDataAttributeOptionInterface.storeLabels == null : this.storeLabels.equals(eavDataAttributeOptionInterface.storeLabels));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.label == null ? 0: this.label.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    result = 31 * result + (this.sortOrder == null ? 0: this.sortOrder.hashCode());
    result = 31 * result + (this.isDefault == null ? 0: this.isDefault.hashCode());
    result = 31 * result + (this.storeLabels == null ? 0: this.storeLabels.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EavDataAttributeOptionInterface {\n");
    
    sb.append("  label: ").append(label).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("  sortOrder: ").append(sortOrder).append("\n");
    sb.append("  isDefault: ").append(isDefault).append("\n");
    sb.append("  storeLabels: ").append(storeLabels).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
