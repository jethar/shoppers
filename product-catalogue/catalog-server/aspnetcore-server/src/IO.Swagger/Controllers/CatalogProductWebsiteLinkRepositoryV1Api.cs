/*
 * Shoppers OpenAPI
 *
 * This is a Shoppers Catalogue server.  [Learn about Swagger](http://swagger.io) or join the IRC channel `#swagger` on irc.freenode.net.  For this sample, you can use the api key `special-key` to test the authorization filters 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class CatalogProductWebsiteLinkRepositoryV1ApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Remove the website assignment from the product by product sku</remarks>
        /// <param name="sku"></param>
        /// <param name="websiteId"></param>
        /// <response code="200">200 Success.</response>
        /// <response code="400">400 Bad Request</response>
        /// <response code="401">401 Unauthorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v2/v1/products/{sku}/websites/{websiteId}")]
        [SwaggerOperation("CatalogProductWebsiteLinkRepositoryV1DeleteByIdDelete")]
        [SwaggerResponse(200, type: typeof(bool?))]
        public virtual IActionResult CatalogProductWebsiteLinkRepositoryV1DeleteByIdDelete([FromRoute]string sku, [FromRoute]int? websiteId)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<bool?>(exampleJson)
            : default(bool?);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Assign a product to the website</remarks>
        /// <param name="sku"></param>
        /// <param name="body"></param>
        /// <response code="200">200 Success.</response>
        /// <response code="400">400 Bad Request</response>
        /// <response code="401">401 Unauthorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v2/v1/products/{sku}/websites")]
        [SwaggerOperation("CatalogProductWebsiteLinkRepositoryV1SavePost")]
        [SwaggerResponse(200, type: typeof(bool?))]
        public virtual IActionResult CatalogProductWebsiteLinkRepositoryV1SavePost([FromRoute]string sku, [FromBody]Body2 body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<bool?>(exampleJson)
            : default(bool?);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Assign a product to the website</remarks>
        /// <param name="sku"></param>
        /// <param name="body"></param>
        /// <response code="200">200 Success.</response>
        /// <response code="400">400 Bad Request</response>
        /// <response code="401">401 Unauthorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpPut]
        [Route("/v2/v1/products/{sku}/websites")]
        [SwaggerOperation("CatalogProductWebsiteLinkRepositoryV1SavePut")]
        [SwaggerResponse(200, type: typeof(bool?))]
        public virtual IActionResult CatalogProductWebsiteLinkRepositoryV1SavePut([FromRoute]string sku, [FromBody]Body1 body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<bool?>(exampleJson)
            : default(bool?);
            return new ObjectResult(example);
        }
    }
}
