# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class EavDataAttributeFrontendLabelInterface(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, store_id: int=None, label: str=None):
        """
        EavDataAttributeFrontendLabelInterface - a model defined in Swagger

        :param store_id: The store_id of this EavDataAttributeFrontendLabelInterface.
        :type store_id: int
        :param label: The label of this EavDataAttributeFrontendLabelInterface.
        :type label: str
        """
        self.swagger_types = {
            'store_id': int,
            'label': str
        }

        self.attribute_map = {
            'store_id': 'store_id',
            'label': 'label'
        }

        self._store_id = store_id
        self._label = label

    @classmethod
    def from_dict(cls, dikt) -> 'EavDataAttributeFrontendLabelInterface':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The eav-data-attribute-frontend-label-interface of this EavDataAttributeFrontendLabelInterface.
        :rtype: EavDataAttributeFrontendLabelInterface
        """
        return deserialize_model(dikt, cls)

    @property
    def store_id(self) -> int:
        """
        Gets the store_id of this EavDataAttributeFrontendLabelInterface.
        Store id

        :return: The store_id of this EavDataAttributeFrontendLabelInterface.
        :rtype: int
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id: int):
        """
        Sets the store_id of this EavDataAttributeFrontendLabelInterface.
        Store id

        :param store_id: The store_id of this EavDataAttributeFrontendLabelInterface.
        :type store_id: int
        """

        self._store_id = store_id

    @property
    def label(self) -> str:
        """
        Gets the label of this EavDataAttributeFrontendLabelInterface.
        Option label

        :return: The label of this EavDataAttributeFrontendLabelInterface.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """
        Sets the label of this EavDataAttributeFrontendLabelInterface.
        Option label

        :param label: The label of this EavDataAttributeFrontendLabelInterface.
        :type label: str
        """

        self._label = label

