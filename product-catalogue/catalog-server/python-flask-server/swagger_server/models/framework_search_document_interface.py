# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.framework_attribute_interface import FrameworkAttributeInterface
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class FrameworkSearchDocumentInterface(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id: int=None, custom_attributes: List[FrameworkAttributeInterface]=None):
        """
        FrameworkSearchDocumentInterface - a model defined in Swagger

        :param id: The id of this FrameworkSearchDocumentInterface.
        :type id: int
        :param custom_attributes: The custom_attributes of this FrameworkSearchDocumentInterface.
        :type custom_attributes: List[FrameworkAttributeInterface]
        """
        self.swagger_types = {
            'id': int,
            'custom_attributes': List[FrameworkAttributeInterface]
        }

        self.attribute_map = {
            'id': 'id',
            'custom_attributes': 'custom_attributes'
        }

        self._id = id
        self._custom_attributes = custom_attributes

    @classmethod
    def from_dict(cls, dikt) -> 'FrameworkSearchDocumentInterface':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The framework-search-document-interface of this FrameworkSearchDocumentInterface.
        :rtype: FrameworkSearchDocumentInterface
        """
        return deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """
        Gets the id of this FrameworkSearchDocumentInterface.

        :return: The id of this FrameworkSearchDocumentInterface.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """
        Sets the id of this FrameworkSearchDocumentInterface.

        :param id: The id of this FrameworkSearchDocumentInterface.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def custom_attributes(self) -> List[FrameworkAttributeInterface]:
        """
        Gets the custom_attributes of this FrameworkSearchDocumentInterface.
        Custom attributes values.

        :return: The custom_attributes of this FrameworkSearchDocumentInterface.
        :rtype: List[FrameworkAttributeInterface]
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes: List[FrameworkAttributeInterface]):
        """
        Sets the custom_attributes of this FrameworkSearchDocumentInterface.
        Custom attributes values.

        :param custom_attributes: The custom_attributes of this FrameworkSearchDocumentInterface.
        :type custom_attributes: List[FrameworkAttributeInterface]
        """

        self._custom_attributes = custom_attributes

