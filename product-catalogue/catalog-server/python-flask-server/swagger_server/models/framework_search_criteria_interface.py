# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.framework_search_filter_group import FrameworkSearchFilterGroup
from swagger_server.models.framework_sort_order import FrameworkSortOrder
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class FrameworkSearchCriteriaInterface(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, filter_groups: List[FrameworkSearchFilterGroup]=None, sort_orders: List[FrameworkSortOrder]=None, page_size: int=None, current_page: int=None):
        """
        FrameworkSearchCriteriaInterface - a model defined in Swagger

        :param filter_groups: The filter_groups of this FrameworkSearchCriteriaInterface.
        :type filter_groups: List[FrameworkSearchFilterGroup]
        :param sort_orders: The sort_orders of this FrameworkSearchCriteriaInterface.
        :type sort_orders: List[FrameworkSortOrder]
        :param page_size: The page_size of this FrameworkSearchCriteriaInterface.
        :type page_size: int
        :param current_page: The current_page of this FrameworkSearchCriteriaInterface.
        :type current_page: int
        """
        self.swagger_types = {
            'filter_groups': List[FrameworkSearchFilterGroup],
            'sort_orders': List[FrameworkSortOrder],
            'page_size': int,
            'current_page': int
        }

        self.attribute_map = {
            'filter_groups': 'filter_groups',
            'sort_orders': 'sort_orders',
            'page_size': 'page_size',
            'current_page': 'current_page'
        }

        self._filter_groups = filter_groups
        self._sort_orders = sort_orders
        self._page_size = page_size
        self._current_page = current_page

    @classmethod
    def from_dict(cls, dikt) -> 'FrameworkSearchCriteriaInterface':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The framework-search-criteria-interface of this FrameworkSearchCriteriaInterface.
        :rtype: FrameworkSearchCriteriaInterface
        """
        return deserialize_model(dikt, cls)

    @property
    def filter_groups(self) -> List[FrameworkSearchFilterGroup]:
        """
        Gets the filter_groups of this FrameworkSearchCriteriaInterface.
        A list of filter groups.

        :return: The filter_groups of this FrameworkSearchCriteriaInterface.
        :rtype: List[FrameworkSearchFilterGroup]
        """
        return self._filter_groups

    @filter_groups.setter
    def filter_groups(self, filter_groups: List[FrameworkSearchFilterGroup]):
        """
        Sets the filter_groups of this FrameworkSearchCriteriaInterface.
        A list of filter groups.

        :param filter_groups: The filter_groups of this FrameworkSearchCriteriaInterface.
        :type filter_groups: List[FrameworkSearchFilterGroup]
        """
        if filter_groups is None:
            raise ValueError("Invalid value for `filter_groups`, must not be `None`")

        self._filter_groups = filter_groups

    @property
    def sort_orders(self) -> List[FrameworkSortOrder]:
        """
        Gets the sort_orders of this FrameworkSearchCriteriaInterface.
        Sort order.

        :return: The sort_orders of this FrameworkSearchCriteriaInterface.
        :rtype: List[FrameworkSortOrder]
        """
        return self._sort_orders

    @sort_orders.setter
    def sort_orders(self, sort_orders: List[FrameworkSortOrder]):
        """
        Sets the sort_orders of this FrameworkSearchCriteriaInterface.
        Sort order.

        :param sort_orders: The sort_orders of this FrameworkSearchCriteriaInterface.
        :type sort_orders: List[FrameworkSortOrder]
        """

        self._sort_orders = sort_orders

    @property
    def page_size(self) -> int:
        """
        Gets the page_size of this FrameworkSearchCriteriaInterface.
        Page size.

        :return: The page_size of this FrameworkSearchCriteriaInterface.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size: int):
        """
        Sets the page_size of this FrameworkSearchCriteriaInterface.
        Page size.

        :param page_size: The page_size of this FrameworkSearchCriteriaInterface.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def current_page(self) -> int:
        """
        Gets the current_page of this FrameworkSearchCriteriaInterface.
        Current page.

        :return: The current_page of this FrameworkSearchCriteriaInterface.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page: int):
        """
        Sets the current_page of this FrameworkSearchCriteriaInterface.
        Current page.

        :param current_page: The current_page of this FrameworkSearchCriteriaInterface.
        :type current_page: int
        """

        self._current_page = current_page

