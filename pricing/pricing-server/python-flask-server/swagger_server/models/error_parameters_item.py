# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ErrorParametersItem(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, resources: str=None, field_name: str=None, field_value: str=None):
        """
        ErrorParametersItem - a model defined in Swagger

        :param resources: The resources of this ErrorParametersItem.
        :type resources: str
        :param field_name: The field_name of this ErrorParametersItem.
        :type field_name: str
        :param field_value: The field_value of this ErrorParametersItem.
        :type field_value: str
        """
        self.swagger_types = {
            'resources': str,
            'field_name': str,
            'field_value': str
        }

        self.attribute_map = {
            'resources': 'resources',
            'field_name': 'fieldName',
            'field_value': 'fieldValue'
        }

        self._resources = resources
        self._field_name = field_name
        self._field_value = field_value

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorParametersItem':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The error-parameters-item of this ErrorParametersItem.
        :rtype: ErrorParametersItem
        """
        return deserialize_model(dikt, cls)

    @property
    def resources(self) -> str:
        """
        Gets the resources of this ErrorParametersItem.
        ACL resource

        :return: The resources of this ErrorParametersItem.
        :rtype: str
        """
        return self._resources

    @resources.setter
    def resources(self, resources: str):
        """
        Sets the resources of this ErrorParametersItem.
        ACL resource

        :param resources: The resources of this ErrorParametersItem.
        :type resources: str
        """

        self._resources = resources

    @property
    def field_name(self) -> str:
        """
        Gets the field_name of this ErrorParametersItem.
        Missing or invalid field name

        :return: The field_name of this ErrorParametersItem.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name: str):
        """
        Sets the field_name of this ErrorParametersItem.
        Missing or invalid field name

        :param field_name: The field_name of this ErrorParametersItem.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def field_value(self) -> str:
        """
        Gets the field_value of this ErrorParametersItem.
        Incorrect field value

        :return: The field_value of this ErrorParametersItem.
        :rtype: str
        """
        return self._field_value

    @field_value.setter
    def field_value(self, field_value: str):
        """
        Sets the field_value of this ErrorParametersItem.
        Incorrect field value

        :param field_value: The field_value of this ErrorParametersItem.
        :type field_value: str
        """

        self._field_value = field_value

