/*
 * Shoppers OpenAPI
 *
 * This is a Shoppers Catalogue server.  [Learn about Swagger](http://swagger.io) or join the IRC channel `#swagger` on irc.freenode.net.  For this sample, you can use the api key `special-key` to test the authorization filters 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class CatalogProductTierPriceManagementV1ApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Create tier price for product</remarks>
        /// <param name="sku"></param>
        /// <param name="customerGroupId">&#39;all&#39; can be used to specify &#39;ALL GROUPS&#39;</param>
        /// <param name="price"></param>
        /// <param name="qty"></param>
        /// <response code="200">200 Success.</response>
        /// <response code="400">400 Bad Request</response>
        /// <response code="401">401 Unauthorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/v2/v1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}")]
        [SwaggerOperation("CatalogProductTierPriceManagementV1AddPost")]
        [SwaggerResponse(200, type: typeof(bool?))]
        public virtual IActionResult CatalogProductTierPriceManagementV1AddPost([FromRoute]string sku, [FromRoute]string customerGroupId, [FromRoute]decimal? price, [FromRoute]decimal? qty)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<bool?>(exampleJson)
            : default(bool?);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get tier price of product</remarks>
        /// <param name="sku"></param>
        /// <param name="customerGroupId">&#39;all&#39; can be used to specify &#39;ALL GROUPS&#39;</param>
        /// <response code="200">200 Success.</response>
        /// <response code="400">400 Bad Request</response>
        /// <response code="401">401 Unauthorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/v2/v1/products/{sku}/group-prices/{customerGroupId}/tiers")]
        [SwaggerOperation("CatalogProductTierPriceManagementV1GetListGet")]
        [SwaggerResponse(200, type: typeof(List<ProductTierPriceInterface>))]
        public virtual IActionResult CatalogProductTierPriceManagementV1GetListGet([FromRoute]string sku, [FromRoute]string customerGroupId)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ProductTierPriceInterface>>(exampleJson)
            : default(List<ProductTierPriceInterface>);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Remove tier price from product</remarks>
        /// <param name="sku"></param>
        /// <param name="customerGroupId">&#39;all&#39; can be used to specify &#39;ALL GROUPS&#39;</param>
        /// <param name="qty"></param>
        /// <response code="200">200 Success.</response>
        /// <response code="400">400 Bad Request</response>
        /// <response code="401">401 Unauthorized</response>
        /// <response code="0">Unexpected error</response>
        [HttpDelete]
        [Route("/v2/v1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}")]
        [SwaggerOperation("CatalogProductTierPriceManagementV1RemoveDelete")]
        [SwaggerResponse(200, type: typeof(bool?))]
        public virtual IActionResult CatalogProductTierPriceManagementV1RemoveDelete([FromRoute]string sku, [FromRoute]string customerGroupId, [FromRoute]decimal? qty)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<bool?>(exampleJson)
            : default(bool?);
            return new ObjectResult(example);
        }
    }
}
